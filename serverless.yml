service: notproperty24

frameworkVersion: "2"

provider:
  name: aws
  runtime: nodejs14.x
  region: af-south-1
  lambdaHashingVersion: 20201221
  timeout: 20
  environment:
    stage: ${self:custom.myStage}

custom:
  myStage: ${opt:stage, 'dev'}
  serverless-offline:
    httpPort: 4000
    websocketPort: 4001
    lambdaPort: 4002

functions:
  listListingTypes:
    name: ${self:service}-allListingTypes
    handler: functions/listingType.list
    memorySize: 128
    events:
      - http:
          path: api/listingType
          method: get
          cors: true
  listingType:
    name: ${self:service}-listingType
    handler: functions/listingType.get
    memorySize: 128
    events:
      - http:
          path: api/listingType/{id}
          method: get
          cors: true

  listPropertyTypes:
    name: ${self:service}-allPropertyTypes
    handler: functions/propertyType.list
    memorySize: 128
    events:
      - http:
          path: api/propertyType
          method: get
          cors: true
  propertyType:
    name: ${self:service}-propertyType
    handler: functions/propertyType.get
    memorySize: 128
    events:
      - http:
          path: api/propertyType/{id}
          method: get
          cors: true

  listAddress:
    name: ${self:service}-allAddress
    handler: functions/address.list
    memorySize: 128
    events:
      - http:
          path: api/address
          method: get
          cors: true
  address:
    name: ${self:service}-address
    handler: functions/address.get
    memorySize: 128
    events:
      - http:
          path: api/address/{id}
          method: get
          cors: true

  listAgents:
    name: ${self:service}-allAgents
    handler: functions/agent.list
    memorySize: 128
    events:
      - http:
          path: api/agent
          method: get
          cors: true
  agent:
    name: ${self:service}-agent
    handler: functions/agent.get
    memorySize: 128
    events:
      - http:
          path: api/agent/{id}
          method: get
          cors: true

  listProperyyImages:
    name: ${self:service}-allPropertyImages
    handler: functions/propertyImage.list
    memorySize: 128
    events:
      - http:
          path: api/propertyImage
          method: get
          cors: true
  propertyImage:
    name: ${self:service}-propertyImage
    handler: functions/propertyImage.get
    memorySize: 128
    events:
      - http:
          path: api/propertyImage/{id}
          method: get
          cors: true

  listProperty:
    name: ${self:service}-allProperties
    handler: functions/property.list
    memorySize: 128
    events:
      - http:
          path: api/property
          method: get
          cors: true
  property:
    name: ${self:service}-property
    handler: functions/property.get
    memorySize: 128
    events:
      - http:
          path: api/property/{id}
          method: get
          cors: true
  propertySubmission:
    name: ${self:service}-propertySubmit
    handler: functions/property.submit
    memorySize: 128
    description: Insert a new property.
    events:
      - http:
          path: api/property
          method: post
          cors: true

plugins:
  - serverless-offline
